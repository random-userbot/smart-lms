# Pre-commit hooks for security and code quality
# Install: pip install pre-commit && pre-commit install

repos:
  # Code formatting
  - repo: https://github.com/psf/black
    rev: 23.11.0
    hooks:
      - id: black
        language_version: python3.11
        args: ['--line-length=100']

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ['--profile', 'black', '--line-length', '100']

  # Linting
  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: ['--max-line-length=100', '--extend-ignore=E203,W503']

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-r', 'services/', 'app/', '-ll']
        exclude: 'legacy/|tests/'

  # YAML validation
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-yaml
        args: ['--safe']
      - id: check-json
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-added-large-files
        args: ['--maxkb=10240']  # 10MB limit
      - id: detect-private-key
      - id: check-merge-conflict

  # Secrets detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: 'legacy/|\.env\.example|config\.example\.yaml'

  # Dependency vulnerability check
  - repo: local
    hooks:
      - id: safety-check
        name: Safety dependency vulnerability scan
        entry: safety
        args: ['check', '--json']
        language: system
        pass_filenames: false
        files: requirements\.txt$
